class Modal
  constructor: (el) ->
    @modal = el
    @modalOverlay = el.parent(".modal-overlay")

  show: ->
    @modalOverlay.toggleClass("show")
    @

  close: ->
    @modalOverlay.toggleClass("show")

  modalBody: ->
    @modal.find('.modal__body')

  showWithHTML: (html) ->
    @modalBody().html(html)

  waiting: ->
    @modalBody().html """
      <div class="modal__spinner--overlay flex items-center justify-center">
        <%= image_tag('loader.gif', class: 'modal__spinner ma' ) %>
      </div>
    """


contactModalObj =
  el: "#contact-modal-container"
  data:
    showModal: false
    isLoading: false
    contact: {}
  methods:
    showContactWithId: (id) ->
      self = @
      self.showModal = true
      self.isLoading = true
      TMLAxios.get "/contacts/#{id}.json"
      .then (response) ->
        self.isLoading = false
        self.contact = response.data.contact
        new ContactMap(document.getElementById("contact-card__map"), response.data.contact.address).show()


document.addEventListener "turbolinks:load", ->
  window.TMLContactModal = new Vue(contactModalObj)

window.addEventListener 'keyup', (evt) ->
  if evt.keyCode is 27
    TMLContactModal.showModal = false
